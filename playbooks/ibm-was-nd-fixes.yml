# Install WebSphere Application Server - Network Deployment
#
# Variables used in this playbook that can be setup at hosts file.
#
# HTTP server that has installation Files
#   was_fixes_repository_url: http://192.168.1.1/was/8.5.5
#
# For Version 8.5.5.11
#  was_fixes_bin_file01:    "8.5.5-WS-WAS-FP011-part1.zip"
#  was_fixes_bin_file01_sha256: "bd9b51bd6a8522da8a6a19fcb0cf0ccc9980b13f5da2a1bcd4db2242ae555a66"
#  was_fixes_bin_file02:    "8.5.5-WS-WAS-FP011-part2.zip"
#  was_fixes_bin_file02_sha256: "0ab936b38ebee485471ce9f6fdbf5c0a609f0ffa837247fb81db6935f5cc061c"
#
# For Version 8.5.5.8
#  was_fixes_bin_file01:    "8.5.5-WS-WAS-FP0000008-part1.zip"
#  was_fixes_bin_file01_sha256: "ffd63ca69e1496f416e483e7ba7089a2b94b5538255b7eb037b672084f4870dc"
#  was_fixes_bin_file02:    "8.5.5-WS-WAS-FP0000008-part2.zip"
#  was_fixes_bin_file02_sha256: "14469a107c33083b5885dfeef010fe5fcb4b0815eb4ab3dadc5c47bbad6c4871"
#  __was_version:           "8.5.5008.20151112_0939"
---
- name:                     Install IBM WAS ND Fixes
  hosts:                    was-servers
  become:                   true
  vars:
    __tmp_dir:              "{{ tmp_dir | default('/opt/IBM/Binaries') }}/was_fixes"
    __logs_dir:             "{{ tmp_dir | default('/opt/IBM/Binaries') }}/logs"
    __iim_install_location: "{{ iim_install_location  | default('/opt/IBM/InstallationManager') }}"
    __was_install_location: "{{ was_install_location  | default('/opt/IBM/WebSphere/AppServer') }}"
    __imshared_location:    "{{ imshared_location  | default('/opt/IBM/IMShared') }}"
    __now:                  "{{ lookup('pipe', 'date +%Y%m%d%H%M%S') }}"
    __rsp_file:             "{{ __logs_dir }}/was_nd_fixes.rsp"
    __log_file:             "{{ __logs_dir }}/was_nd_fixes_install.{{ __now }}.log"
    __tpl_file:             "ansible/playbooks/was_nd_fixes.rsp"
    __bin_file01:           "{{ was_fixes_bin_file01 | default('8.5.5-WS-WAS-FP011-part1.zip') }}"
    __bin_file01_sha256:    "{{ was_fixes_bin_file01_sha256 | default('bd9b51bd6a8522da8a6a19fcb0cf0ccc9980b13f5da2a1bcd4db2242ae555a66') }}"
    __bin_file02:           "{{ was_fixes_bin_file02 | default('8.5.5-WS-WAS-FP011-part2.zip') }}"
    __bin_file02_sha256:    "{{ was_fixes_bin_file02_sha256 | default('0ab936b38ebee485471ce9f6fdbf5c0a609f0ffa837247fb81db6935f5cc061c') }}"
    __was_fixes_version:    "8.5.5008.20151112_0939"

  tasks:
    - name:                 Install pre-requisites
      yum:                  name={{item}} state=present
      with_items:
        - unzip
        - tar
        - wget
      when:                 (ansible_distribution == "RedHat") or (ansible_distribution == "CentOS")

    - name:                 Check Variables
      debug:
        msg="was_repository_url={{ was_repository_url }} was_fixes_bin_file01={{ was_fixes_bin_file01 }} was_fixes_bin_file01_sha256={{ was_fixes_bin_file01_sha256 }}"

    - name:                 Create Binaries directory
      file:                 path={{ __tmp_dir }} state=directory mode=0755

    - name:                 Create Logs directory
      file:                 path={{ __logs_dir }} state=directory mode=0755

    - name:                 Download {{ was_fixes_bin_file01 }}
      get_url:
        url:                "{{ was_repository_url }}/{{ was_fixes_bin_file01 }}"
        dest:               "{{ __tmp_dir }}/{{ was_fixes_bin_file01 }}"
        mode:               0755
        checksum:           sha256:{{ was_fixes_bin_file01_sha256 }}

    - name:                 Download {{ was_fixes_bin_file02 }}
      get_url:
        url:                "{{ was_repository_url }}/{{ was_fixes_bin_file02 }}"
        dest:               "{{ __tmp_dir }}/{{ was_fixes_bin_file02 }}"
        mode:               0755
        checksum:           sha256:{{ was_fixes_bin_file02_sha256 }}

    - name:                 Extract {{ was_fixes_bin_file01 }}
      unarchive:
        src:                "{{ __tmp_dir }}/{{ was_fixes_bin_file01 }}"
        dest:               "{{ __tmp_dir }}/"
        copy:               no

    - name:                 Extract {{ was_fixes_bin_file02 }}
      unarchive:
        src:                "{{ __tmp_dir }}/{{ was_fixes_bin_file02 }}"
        dest:               "{{ __tmp_dir }}/"
        copy:               no

    - name:                 Generate WAS Response file
      template:
        src:                "{{ __tpl_file }}"
        dest:               "{{ __rsp_file }}"

    - name:                 Debugando
      debug:                msg="{{ __iim_install_location }}/eclipse/tools/imcl -acceptLicense -sVP -log {{ __log_file }} input {{ __rsp_file }}"

    - name:                 Install IBM WAS ND Fixes Software
      command:
        chdir={{ __tmp_dir }}
        {{ __iim_install_location }}/eclipse/tools/imcl -acceptLicense -sVP -log {{ __log_file }} input {{ __rsp_file }}
      register:             install
      changed_when:         install.rc != 0

    #- name:                Cleanup Binaries directory
    #  file:
    #    state:             absent
    #    path:              "{{ __tmp_dir }}"
