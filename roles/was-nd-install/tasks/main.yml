---
- name:          Install pre-requisites
  yum:           name={{item}} state=present
  with_items:
    - unzip
    - tar
    - wget
  when:          (ansible_distribution == "RedHat") or (ansible_distribution == "CentOS")

- name:          Is IIM Installed?
  command:       "egrep {{ __iim_product_id }} /var/ibm/InstallationManager/installed.xml"
  register:      iim_already_installed

- name:          Is Product already Installed?
  command:       "egrep {{ __product_id }} /var/ibm/InstallationManager/installed.xml"
  register:      version_already_installed
  ignore_errors: true

- name:          Cleanup Binaries directory
  file:          path={{ __tmp_dir }} state=absent
  when:          version_already_installed.rc != 0
  ignore_errors: true

#-  debug:       var=version_already_installed
- name:          Create Binaries directory
  file:          path={{ __tmp_dir }} state=directory mode=0755
  when:          version_already_installed.rc != 0

- name:          Create Logs directory
  file:          path={{ __logs_dir }} state=directory mode=0755
  when:          version_already_installed.rc != 0

- name:          Download WAS ND V8.5.5 Files
  get_url:
    url:         "{{ was_repository_url }}/{{ item.bf }}"
    dest:        "{{ __tmp_dir }}/{{ item.bf }}"
    mode:        0755
    checksum:    sha256:{{ item.bfs }}
  with_items:    "{{ __was_files }}"
  when:          version_already_installed.rc != 0

- name:          Extract WAS ND V8.5.5 Files
  unarchive:
    src:         "{{ __tmp_dir }}/{{ item.bf }}"
    dest:        "{{ __tmp_dir }}/"
    copy:        no
  with_items:    "{{ __was_files }}"
  when:          version_already_installed.rc != 0

- name:          Generate WAS Response file
  template:
    src:         "{{ __tpl_file }}"
    dest:        "{{ __rsp_file }}"
  when:          version_already_installed.rc != 0

- name:          Install IBM WAS Software
  command:
    chdir={{ __tmp_dir }}
    {{ __iim_install_location }}/eclipse/tools/imcl -acceptLicense -sVP -log {{ __log_file }} input {{ __rsp_file }}
  register:      cout
  changed_when:  ( cout.stdout.find( __version_check ) != -1)
  when:          version_already_installed.rc != 0

#- debug:        var=cout

- name:          Cleanup Binaries directory
  file:          path={{ __tmp_dir }} state=absent
  when:          version_already_installed.rc != 0
